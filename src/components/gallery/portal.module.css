.p {
    --fromX: 100%;
    --toX: 0;

    position: fixed;
    inset: 0;
    z-index: 1;
    background-color: var(--light-trans);
    display: flex;
    justify-content: center;
    align-items: center;
}

.btn,
.prev,
.next {
    position: absolute;
    z-index: 10;
    padding: 0.5rem 1.25rem;
    font-family: var(--handwritten);
    font-size: 1.25rem;
    font-weight: 500;
    box-shadow: var(--box-shadow);
    color: var(--cian);
    background-color: var(--light);
    transition: color .2s, background-color .2s;

}

.btn {
    top: 1rem;
    right: 1rem;
    border-radius: 100%;
    border-radius: 75% 0;
}
.btn:hover,
.prev:hover,
.next:hover {
    background-color: var(--cian);
    color: var(--light);
}

.prev,
.next {
    top: 20%;
    bottom: 0;
    padding-inline: 1rem;
}

.prev {
    left: 0;
    border-radius: 100vw 0 0 100vw;
}

.next {
    right: 0;
    border-radius: 0 100vw 100vw 0;
}


.c {
    position: relative;
    width: 100%;
    height: 85%;
    margin-left: 13vw;
    margin-right: 2vw;
}

.c img {
    object-fit: scale-down;
}

.ribbon {
    position: absolute;
    bottom: 5%;
    left: 0;
    right: 0;
    max-width: 50vw;
    margin-inline: auto;
    z-index: 0;
    visibility: hidden;
    opacity: 0;
    transform: translateY(100%);
    transition-property: opacity, transform, visibility;
    transition-duration: .3s;
    transition-timing-function: ease-in-out;
}

.ribbon::before {
    content: '';
    position: absolute;
    inset: -1rem;
    background-image: linear-gradient(to right, var(--green), var(--blue));
    border-radius: 0.125rem 100%;
    z-index: -1;
    transition: transform .2s ease-in-out;
}

.ribbon div {
    border-radius: 5% 25%;
    padding: 2rem;
    background-color: var(--light);
    box-shadow: var(--box-shadow);
}

.c:hover .ribbon {
    visibility: visible;
    opacity: 1;
    cursor: pointer;
    transform: translateY(0);
}

.c:hover .ribbon:hover {
    transform: scale(1.15);
}

.slideLeftIn,
.slideRightIn,
.slideOut {
    animation-name: slidein;
    animation-duration: .3s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-in-out;
}

.slideLeftIn {
    --fromX: 100%;
}

.slideRightIn {
    --fromX: -100%;
}

.slideOut {
    animation-direction: reverse;
}

.modalEnter, 
.modalExit {
    animation: fadein .3s ease-in-out forwards;
}

.modalExit {
    animation-direction: reverse;
}

@keyframes fadein {
    0% {opacity: 0;}
    100% {opacity: 1;}
}

@keyframes slidein {
    0% {transform: translateX(var(--fromX)); opacity: 0;}
    100% { transform: translateX(0); opacity: 1;}
}
